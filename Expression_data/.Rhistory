knitr::opts_chunk$set(echo = TRUE)
library(BioNERO)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
select_sample <- function(x){
dplyr::select(Atlas_tpm,all_of(x))
}
median_calc <- function (x) {
apply(x, 1, median, na.rm=TRUE)
}
# Define the code block as a function
process_sample <- function(sample_name) {
dt_sample <- select_sample(get(sample_name))
dt_sample$Median_Sample <- median_calc(dt_sample)
dt_sample %>% select(Median_Sample)
}
load("~/Desktop/Multiomic_analysis_oil_traits/Expression_data/expression_TPM_gma_pvu.RData")
load("~/Desktop/Multiomic_analysis_oil_traits/Expression_data/expression_TPM_gma_pvu.RData")
load("~/Desktop/Multiomic_analysis_oil_traits/Expression_data/expression_TPM_gma_pvu.RData")
knitr::opts_chunk$set(echo = TRUE)
# Convert a list to a dataframe
df_medians <- bind_cols(medians)
library(BioNERO)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(readr)
library(reshape2)
#calc median
median_calc <- function (x) {
apply(x, 1, median, na.rm=TRUE)
}
# Add median calculated to a column
add_median_column <- function(df, name) {
df <- mutate(df, median = median_calc(df))
df <- select(df, median)
return(df)
}
#Calc TPM values of raw expression data of common bean
calc.tpm <- function(data) {
if(!("length" %in% names(data))){
stop("Error: column name 'length' not found in names(data)")
}
feature_length <- data[,"length",drop=FALSE]
counts <- data[,!(names(data)=="length"),drop=FALSE]
##Calculate the RPK value
RPK <- matrix(0, nrow=dim(counts)[1], ncol=dim(counts)[2])
for(row in 1:dim(counts)[1]){
for(col in 1:dim(counts)[2]){
RPK[row,col] <- counts[row,col]/feature_length$length[row]
}
}
##Calculate the sums of each column and divide by 1000000
scale_factor <- colSums(RPK)/1000000
##Now divide all values in each column by the scaling factor
TPM <- t(t(RPK)/scale_factor)
colnames(TPM) <- names(counts)
row.names(TPM) <- row.names(counts)
return(as.data.frame(TPM))
}
#Plot heatmap
heatmap_plot <- function(x) {
my_color_palette <- RColorBrewer::brewer.pal(n=4, name= "Reds")
limite_cores <- c(0, 7.99999, 20, 30, 40)
hm <- pheatmap(as.matrix(x),
color= my_color_palette,
border_color = "white",
cluster_cols = FALSE,
cluster_rows = FALSE,
show_rownames = TRUE,
breaks = limite_cores,
cellwidth = 10,
fontsize = 6,
height = 20,
cutree_cols = 1)
return(hm)
}
# Group the data by plant part and BioSample
groups <- split(metadata_sea$BioSample, metadata_sea$Part)
# Create objects in the R environment for each group
for (group_name in names(groups)) {
assign(group_name, groups[[group_name]])
}
# Print the BioSamples for each Part group
for (group_name in names(groups)) {
cat(group_name, "(", paste(groups[[group_name]], collapse = ", "), ")\n")
}
# Make a dataframe for each group of plant part
for (group_name in names(groups)) {
selected_columns <- c(groups[[group_name]])
# Dataframe with selected samples
assign(paste0(group_name, "_exp"), sea_selected_tpm[, selected_columns])
}
# Visualize a specific dataframe of a plant part expression
print(cotyledon_exp)
# List of the plant parts expression data
part_exp <- list(seedcoat_exp, embryo_exp, seed_exp, cotyledon_exp, endosperm_exp, leaf_exp, epicotyl_exp, hypocotyl_exp, shoot_exp, suspensor_exp, flower_exp, pod_exp, nodule_exp, root_exp)
# Using the function add_median_column to calc the median of expression data from each plant part
medians <- map(part_exp, add_median_column)
# Convert a list to a dataframe
df_medians <- bind_cols(medians)
colnames(df_medians) <- c("SeedCoat", "Embryo", "Seed", "Cotyledon", "Endosperm", "Leaf", "Epicotyl",
"Hypocotyl", "Shoot", "Suspensor", "Flower", "Pod", "Nodule", "Root")
View(df_medians)
save.image("~/Desktop/Multiomic_analysis_oil_traits/Expression_data/expression_TPM_gma_pvu.RData")
